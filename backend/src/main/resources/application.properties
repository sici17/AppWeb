#Database
spring.application.name=PSW_cus
spring.datasource.url=jdbc:mysql://localhost:3306/biblioteca_db
spring.datasource.username=root
spring.datasource.password=mysql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false
server.port=8081



#keycloak sito https://developers.redhat.com/articles/2023/07/24/how-integrate-spring-boot-3-spring-security-and-keycloak#create_the_java_files
#spring.security.oauth2.client.provider.external.issuer-uri=http://localhost:8080/realms/external

#spring.security.oauth2.client.registration.external.provider=external
#spring.security.oauth2.client.registration.external.client-name=external-client
#spring.security.oauth2.client.registration.external.client-id=external-client
#spring.security.oauth2.client.registration.external.client-secret=(put your client secret here)
#spring.security.oauth2.client.registration.external.scope=openid,offline_access,profile
#spring.security.oauth2.client.registration.external.authorization-grant-type=authorization_code

#keycloak scala
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/biblioteca/protocol/openid-connect/certs
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/biblioteca
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration
jwt.auth.converter.resource-id=biblioteca-client
jwt.auth.converter.principle-attribute=preferred_username


logging.level.org.springframework.security= DEBUG

keycloak.auth-server-url=http://localhost:8080/
keycloak.realm=biblioteca
keycloak.resource=admin-cli
keycloak.credentials.secret=UubJ2PW7y2i2F7qHJ0wD3sKaVfUl0W5y
keycloak.bearer-only=true
keycloak.ssl-required=external